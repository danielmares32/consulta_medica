{"version":3,"file":"ngx-socket-io.js","sources":["../../src/socket-io.service.ts","../../src/socket-io.module.ts","../../ngx-socket-io.ts"],"sourcesContent":["import { Inject } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\nimport * as io from 'socket.io-client';\n\nimport { SocketIoConfig } from './config/socket-io.config';\n\nexport class WrappedSocket {\n    subscribersCounter: Record<string, number> = {};\n    eventObservables$: Record<string, Observable<any>> = {};\n    ioSocket: any;\n    emptyConfig: SocketIoConfig = {\n        url: '',\n        options: {}\n    };\n\n    constructor(private config: SocketIoConfig) {\n        if (config === undefined) {\n            config = this.emptyConfig;\n        }\n        const url: string = config.url;\n        const options: any = config.options;\n        const ioFunc = (io as any).default ? (io as any).default : io;\n        this.ioSocket = ioFunc(url, options);\n    }\n\n    of(namespace: string) {\n        this.ioSocket.of(namespace);\n    }\n\n    on(eventName: string, callback: Function) {\n        this.ioSocket.on(eventName, callback);\n    }\n\n    once(eventName: string, callback: Function) {\n        this.ioSocket.once(eventName, callback);\n    }\n\n    connect() {\n        return this.ioSocket.connect();\n    }\n\n    disconnect(close?: any) {\n        return this.ioSocket.disconnect.apply(this.ioSocket, arguments);\n    }\n\n    emit(eventName: string, ...args: any[]) {\n        return this.ioSocket.emit.apply(this.ioSocket, arguments);\n    }\n\n    removeListener(eventName: string, callback?: Function) {\n        return this.ioSocket.removeListener.apply(this.ioSocket, arguments);\n    }\n\n    removeAllListeners(eventName?: string) {\n        return this.ioSocket.removeAllListeners.apply(this.ioSocket, arguments);\n    }\n\n    fromEvent<T>(eventName: string): Observable<T> {\n        if (!this.subscribersCounter[eventName]) {\n            this.subscribersCounter[eventName] = 0;\n        }\n        this.subscribersCounter[eventName]++;\n\n        if (!this.eventObservables$[eventName]) {\n            this.eventObservables$[eventName] = new Observable((observer: any) => {\n                const listener = (data: T) => {\n                    observer.next(data);\n                };\n                 this.ioSocket.on(eventName, listener);\n                 return () => {\n                     this.subscribersCounter[eventName]--;\n                     if (this.subscribersCounter[eventName] === 0) {\n                        this.ioSocket.removeListener(eventName, listener);\n                        delete this.eventObservables$[eventName];\n                     }\n                };\n            }).pipe(\n                share()\n            );\n        }\n        return this.eventObservables$[eventName];\n    }\n\n    fromOneTimeEvent<T>(eventName: string): Promise<T> {\n        return new Promise<T>(resolve => this.once(eventName, resolve));\n    }\n\n}\n","import { NgModule, ModuleWithProviders, InjectionToken } from '@angular/core';\nimport { SocketIoConfig } from './config/socket-io.config';\nimport { WrappedSocket } from './socket-io.service';\n\n/** Socket factory */\nexport function SocketFactory(config: SocketIoConfig) {\n    return new WrappedSocket(config);\n}\n\nexport const SOCKET_CONFIG_TOKEN = new InjectionToken<SocketIoConfig>('__SOCKET_IO_CONFIG__');\n\n@NgModule({})\nexport class SocketIoModule {\n    static forRoot(config: SocketIoConfig): ModuleWithProviders<SocketIoModule> {\n        return {\n            ngModule: SocketIoModule,\n            providers: [\n                { provide: SOCKET_CONFIG_TOKEN, useValue: config },\n                {\n                    provide: WrappedSocket,\n                    useFactory: SocketFactory,\n                    deps : [SOCKET_CONFIG_TOKEN]\n                }\n            ]\n        };\n    }\n }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {SOCKET_CONFIG_TOKEN as ɵb,SocketFactory as ɵa} from './src/socket-io.module';"],"names":["io.default"],"mappings":"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"}